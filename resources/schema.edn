;;; Automatically generated by Alzabo. Do not edit!
(#:db{:valueType :db.type/keyword,
      :cardinality :db.cardinality/one,
      :ident :run-step/step-id}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/many,
      :ident :run-step/predecessors}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :ident :run-step/state}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :run-step/agent}
 #:db{:valueType :db.type/instant,
      :cardinality :db.cardinality/one,
      :ident :run-step/start}
 #:db{:valueType :db.type/instant,
      :cardinality :db.cardinality/one,
      :ident :run-step/end}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :run-step/notes}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :ident :run-step/sheet}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :file/pathname}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :file/extension}
 #:db{:unique :db.unique/identity,
      :valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :file/location}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :file/hash}
 #:db{:valueType :db.type/long,
      :cardinality :db.cardinality/one,
      :ident :file/size}
 #:db{:valueType :db.type/instant,
      :cardinality :db.cardinality/one,
      :ident :file/created}
 #:db{:valueType :db.type/keyword,
      :cardinality :db.cardinality/one,
      :ident :operation/cmd}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :operation/parameters}
 #:db{:valueType :db.type/instant,
      :cardinality :db.cardinality/one,
      :ident :operation/time}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :operation/agent}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :sheet/name}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :ident :sheet/derived-from}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/many,
      :ident :sheet/file}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/many,
      :ident :sheet/columns}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/many,
      :ident :sheet/rows}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :column/name}
 #:db{:valueType :db.type/long,
      :cardinality :db.cardinality/one,
      :ident :column/index}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :batch/description}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :doc "Reasearch Ops request number",
      :ident :batch/request}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :ident :batch/date-created}
 #:db{:valueType :db.type/keyword,
      :cardinality :db.cardinality/one,
      :ident :batch/recipe}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :doc "Biological data type eg :datatype.vectra",
      :ident :batch/datatype}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :batch/name}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :doc "Reasearch Ops shipment number",
      :ident :batch/shipment}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/many,
      :ident :batch/run-steps}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/many,
      :ident :batch/sheets}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :doc "EDN for dashboard spec",
      :ident :batch/dashboard}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :doc "Research ops status eg :batch-status.shipped",
      :ident :batch/status}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/many,
      :ident :batch/files}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :ident :batch/owner}
 #:db{:unique :db.unique/identity,
      :valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :project/name}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :project/description}
 #:db{:valueType :db.type/ref,
      :isComponent true,
      :cardinality :db.cardinality/many,
      :ident :project/batches}
 #:db{:valueType :db.type/ref,
      :isComponent true,
      :cardinality :db.cardinality/many,
      :ident :project/history}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :doc "Link to Smartsheet dashboard for project",
      :ident :project/dashboard}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :ident :project/last-op}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :ident :cell/column}
 #:db{:valueType :db.type/string,
      :cardinality :db.cardinality/one,
      :ident :cell/value_string}
 #:db{:valueType :db.type/long,
      :cardinality :db.cardinality/one,
      :ident :cell/value_long}
 #:db{:valueType :db.type/float,
      :cardinality :db.cardinality/one,
      :ident :cell/value_float}
 #:db{:valueType :db.type/instant,
      :cardinality :db.cardinality/one,
      :ident :cell/value_instant}
 #:db{:valueType :db.type/boolean,
      :cardinality :db.cardinality/one,
      :ident :cell/value_boolean}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :ident :cell/value_ref}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/one,
      :ident :object/creation-op}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/many,
      :ident :row/cells}
 #:db{:valueType :db.type/ref,
      :isComponent false,
      :cardinality :db.cardinality/many,
      :ident :row/files}
 #:db{:ident :datatype.sn-rna-seq, :doc "snRNA-seq"}
 #:db{:ident :datatype.vectra, :doc "Vectra"}
 #:db{:ident :datatype.flow-cytometry, :doc "Flow Cytometry"}
 #:db{:ident :datatype.cytof, :doc "CyToF"}
 #:db{:ident :datatype.default, :doc "Default"}
 #:db{:ident :datatype.visium, :doc "Spatial Transcriptomics (Visium)"}
 #:db{:ident :datatype.genotyping, :doc "Genotyping"}
 #:db{:ident :datatype.isoplexis, :doc "Isoplexis"}
 #:db{:ident :datatype.dsp, :doc "Nanostring DSP"}
 #:db{:ident :datatype.sc-rna-seq, :doc "scRNA-seq"}
 #:db{:ident :datatype.tcr, :doc "TCR sequencing"}
 #:db{:ident :datatype.16s, :doc "16S Microbiome Sequencing"}
 #:db{:ident :datatype.sn-atac-seq, :doc "snATAC-seq"}
 #:db{:ident :datatype.rna-seq, :doc "RNA-seq"}
 #:db{:ident :datatype.wes, :doc "Whole Exome Sequencing"}
 #:db{:ident :datatype.nanostring, :doc "Nanostring"}
 #:db{:ident :datatype.metabolomics, :doc "Metabolomics"}
 #:db{:ident :datatype.codex, :doc "CO-Detection by indEXing (CODEX)"}
 #:db{:ident :datatype.wms, :doc "Whole Metagenome Sequencing (WMS)"}
 #:db{:ident :datatype.sc-atac-seq, :doc "scATAC-seq"}
 #:db{:ident :datatype.atac-seq, :doc "ATAC-seq"}
 #:db{:ident :datatype.hichip, :doc "HiChIP"}
 #:db{:ident :datatype.luminex, :doc "Luminex"}
 #:db{:ident :datatype.wgs, :doc "Whole Genome Sequencing"}
 #:db{:ident :datatype.chip-seq, :doc "Chip-seq/ATAC"}
 #:db{:ident :datatype.tcr-a, :doc "TCR alpha sequencing"}
 #:db{:ident :datatype.imc, :doc "Imaging Mass Cytometry (IMC)"}
 #:db{:ident :datatype.mibi,
      :doc "Multiplexed Ion Beam Imaging (MIBI)"}
 #:db{:ident :datatype.cite-seq, :doc "CITE-seq"}
 #:db{:ident :datatype.tcr-b, :doc "TCR beta sequencing"}
 #:db{:ident :datatype.personalis, :doc "Personalis Sequencing"}
 #:db{:ident :batch-status.prepare-for-shipment,
      :doc "Shipment in preparation"}
 #:db{:ident :batch-status.shipped, :doc "Sample shipped to vendor"}
 #:db{:ident :batch-status.data-received, :doc "Data received"}
 #:db{:ident :batch-status.candelized, :doc "Data in CANDEL"}
 #:db{:ident :run-step-state.done, :doc "Done"}
 #:db{:ident :run-step-state.in-progress, :doc "In progress"}
 #:db{:ident :run-step-state.failed, :doc "Failed"}
 #:db{:ident :run-step-state.todo, :doc "To do"}
 #:db{:ident :run-step-state.blocked, :doc "Blocked"})
